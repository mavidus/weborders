<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="6" total="13" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-04-03T20:22:04Z" name="Command line suite" finished-at="2020-04-03T20:23:29Z" duration-ms="85566">
    <groups>
      <group name="regressi">
        <method signature="NegativeTest.wrongPassword()[pri:0, instance:com.weborders.tests.functional_tests.NegativeTest@26a7b76d]" name="wrongPassword" class="com.weborders.tests.functional_tests.NegativeTest"/>
      </group> <!-- regressi -->
      <group name="regression">
        <method signature="PositiveTest.ValidCredentials()[pri:0, instance:com.weborders.tests.functional_tests.PositiveTest@23d2a7e8]" name="ValidCredentials" class="com.weborders.tests.functional_tests.PositiveTest"/>
        <method signature="PositiveTest.ViewAllOrdersPage()[pri:1, instance:com.weborders.tests.functional_tests.PositiveTest@23d2a7e8]" name="ViewAllOrdersPage" class="com.weborders.tests.functional_tests.PositiveTest"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="PositiveTest.ViewAllOrdersPage()[pri:1, instance:com.weborders.tests.functional_tests.PositiveTest@23d2a7e8]" name="ViewAllOrdersPage" class="com.weborders.tests.functional_tests.PositiveTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2020-04-03T20:22:04Z" name="Command line test" finished-at="2020-04-03T20:23:29Z" duration-ms="85566">
      <class name="com.weborders.tests.functional_tests.PositiveTest">
        <test-method is-config="true" signature="setUpMethod(java.lang.String)[pri:0, instance:com.weborders.tests.functional_tests.PositiveTest@23d2a7e8]" started-at="2020-04-03T20:22:19Z" name="setUpMethod" finished-at="2020-04-03T20:22:25Z" duration-ms="5612" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="ValidCredentials()[pri:0, instance:com.weborders.tests.functional_tests.PositiveTest@23d2a7e8]" started-at="2020-04-03T20:22:25Z" name="ValidCredentials" finished-at="2020-04-03T20:22:26Z" duration-ms="802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidCredentials -->
        <test-method is-config="true" signature="tearDownMethod(org.testng.ITestResult)[pri:0, instance:com.weborders.tests.functional_tests.PositiveTest@23d2a7e8]" started-at="2020-04-03T20:22:26Z" name="tearDownMethod" finished-at="2020-04-03T20:22:29Z" duration-ms="2898" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidCredentials status=SUCCESS method=PositiveTest.ValidCredentials()[pri:0, instance:com.weborders.tests.functional_tests.PositiveTest@23d2a7e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.String)[pri:0, instance:com.weborders.tests.functional_tests.PositiveTest@23d2a7e8]" started-at="2020-04-03T20:23:05Z" name="setUpMethod" finished-at="2020-04-03T20:23:11Z" duration-ms="6023" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="ViewAllOrdersPage()[pri:1, instance:com.weborders.tests.functional_tests.PositiveTest@23d2a7e8]" started-at="2020-04-03T20:23:11Z" name="ViewAllOrdersPage" finished-at="2020-04-03T20:23:13Z" duration-ms="1839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ViewAllOrdersPage -->
        <test-method is-config="true" signature="tearDownMethod(org.testng.ITestResult)[pri:0, instance:com.weborders.tests.functional_tests.PositiveTest@23d2a7e8]" started-at="2020-04-03T20:23:13Z" name="tearDownMethod" finished-at="2020-04-03T20:23:18Z" duration-ms="4876" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ViewAllOrdersPage status=SUCCESS method=PositiveTest.ViewAllOrdersPage()[pri:1, instance:com.weborders.tests.functional_tests.PositiveTest@23d2a7e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
      </class> <!-- com.weborders.tests.functional_tests.PositiveTest -->
      <class name="com.weborders.tests.functional_tests.OrderPageTest">
        <test-method is-config="true" signature="setUpMethod(java.lang.String)[pri:0, instance:com.weborders.tests.functional_tests.OrderPageTest@7a9273a8]" started-at="2020-04-03T20:22:29Z" name="setUpMethod" finished-at="2020-04-03T20:22:34Z" duration-ms="5833" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="orderInfo()[pri:0, instance:com.weborders.tests.functional_tests.OrderPageTest@7a9273a8]" started-at="2020-04-03T20:22:34Z" name="orderInfo" finished-at="2020-04-03T20:22:37Z" duration-ms="2922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderInfo -->
        <test-method is-config="true" signature="tearDownMethod(org.testng.ITestResult)[pri:0, instance:com.weborders.tests.functional_tests.OrderPageTest@7a9273a8]" started-at="2020-04-03T20:22:37Z" name="tearDownMethod" finished-at="2020-04-03T20:22:44Z" duration-ms="6982" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=orderInfo status=SUCCESS method=OrderPageTest.orderInfo()[pri:0, instance:com.weborders.tests.functional_tests.OrderPageTest@7a9273a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
      </class> <!-- com.weborders.tests.functional_tests.OrderPageTest -->
      <class name="com.weborders.tests.smoke_test.PageHeadersTest">
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.weborders.tests.smoke_test.PageHeadersTest@687080dc]" started-at="2020-04-03T20:22:04Z" name="setUpTest" finished-at="2020-04-03T20:22:04Z" duration-ms="551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method is-config="true" signature="setUpMethod(java.lang.String)[pri:0, instance:com.weborders.tests.smoke_test.PageHeadersTest@687080dc]" started-at="2020-04-03T20:22:04Z" name="setUpMethod" finished-at="2020-04-03T20:22:15Z" duration-ms="10357" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="pageHeadersTest()[pri:0, instance:com.weborders.tests.smoke_test.PageHeadersTest@687080dc]" started-at="2020-04-03T20:22:15Z" name="pageHeadersTest" finished-at="2020-04-03T20:22:18Z" duration-ms="2828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pageHeadersTest -->
        <test-method is-config="true" signature="tearDownMethod(org.testng.ITestResult)[pri:0, instance:com.weborders.tests.smoke_test.PageHeadersTest@687080dc]" started-at="2020-04-03T20:22:18Z" name="tearDownMethod" finished-at="2020-04-03T20:22:19Z" duration-ms="1795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=pageHeadersTest status=SUCCESS method=PageHeadersTest.pageHeadersTest()[pri:0, instance:com.weborders.tests.smoke_test.PageHeadersTest@687080dc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method is-config="true" signature="tearDownTest()[pri:0, instance:com.weborders.tests.smoke_test.PageHeadersTest@687080dc]" started-at="2020-04-03T20:23:29Z" name="tearDownTest" finished-at="2020-04-03T20:23:29Z" duration-ms="776" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
      </class> <!-- com.weborders.tests.smoke_test.PageHeadersTest -->
      <class name="com.weborders.tests.functional_tests.NegativeTest">
        <test-method is-config="true" signature="setUpMethod(java.lang.String)[pri:0, instance:com.weborders.tests.functional_tests.NegativeTest@26a7b76d]" started-at="2020-04-03T20:22:44Z" name="setUpMethod" finished-at="2020-04-03T20:22:50Z" duration-ms="5740" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="wrongEmailTest()[pri:0, instance:com.weborders.tests.functional_tests.NegativeTest@26a7b76d]" started-at="2020-04-03T20:22:50Z" name="wrongEmailTest" finished-at="2020-04-03T20:22:50Z" duration-ms="76" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy14.sendKeys(Unknown Source)
at com.weborders.tests.functional_tests.NegativeTest.wrongEmailTest(NegativeTest.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongEmailTest -->
        <test-method is-config="true" signature="tearDownMethod(org.testng.ITestResult)[pri:0, instance:com.weborders.tests.functional_tests.NegativeTest@26a7b76d]" started-at="2020-04-03T20:22:50Z" name="tearDownMethod" finished-at="2020-04-03T20:22:54Z" duration-ms="3579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wrongEmailTest status=FAILURE method=NegativeTest.wrongEmailTest()[pri:0, instance:com.weborders.tests.functional_tests.NegativeTest@26a7b76d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.String)[pri:0, instance:com.weborders.tests.functional_tests.NegativeTest@26a7b76d]" started-at="2020-04-03T20:22:54Z" name="setUpMethod" finished-at="2020-04-03T20:23:02Z" duration-ms="8076" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="wrongPassword()[pri:0, instance:com.weborders.tests.functional_tests.NegativeTest@26a7b76d]" started-at="2020-04-03T20:23:02Z" name="wrongPassword" finished-at="2020-04-03T20:23:02Z" duration-ms="362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongPassword -->
        <test-method is-config="true" signature="tearDownMethod(org.testng.ITestResult)[pri:0, instance:com.weborders.tests.functional_tests.NegativeTest@26a7b76d]" started-at="2020-04-03T20:23:02Z" name="tearDownMethod" finished-at="2020-04-03T20:23:05Z" duration-ms="3030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wrongPassword status=SUCCESS method=NegativeTest.wrongPassword()[pri:0, instance:com.weborders.tests.functional_tests.NegativeTest@26a7b76d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.String)[pri:0, instance:com.weborders.tests.functional_tests.NegativeTest@26a7b76d]" started-at="2020-04-03T20:23:18Z" name="setUpMethod" finished-at="2020-04-03T20:23:25Z" duration-ms="6848" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="blankUserName()[pri:2, instance:com.weborders.tests.functional_tests.NegativeTest@26a7b76d]" started-at="2020-04-03T20:23:25Z" name="blankUserName" finished-at="2020-04-03T20:23:26Z" duration-ms="784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- blankUserName -->
        <test-method is-config="true" signature="tearDownMethod(org.testng.ITestResult)[pri:0, instance:com.weborders.tests.functional_tests.NegativeTest@26a7b76d]" started-at="2020-04-03T20:23:26Z" name="tearDownMethod" finished-at="2020-04-03T20:23:29Z" duration-ms="2948" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=blankUserName status=SUCCESS method=NegativeTest.blankUserName()[pri:2, instance:com.weborders.tests.functional_tests.NegativeTest@26a7b76d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
      </class> <!-- com.weborders.tests.functional_tests.NegativeTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
